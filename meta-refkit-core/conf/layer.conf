# We have a conf and classes directory, add to BBPATH
BBPATH .= ":${LAYERDIR}"

# We have recipes-* directories, add to BBFILES
BBFILES += "${LAYERDIR}/recipes-*/*/*.bb"

# All our .bbappends for other layers are in a separate
# "bbappends/<layer>" hierarchy. We activate only those
# bbappends for which the layer they apply to is actually
# present.
#
# Sorted by layer path to keep related layers together.
BBFILES_DYNAMIC += " \
    clang-layer:${LAYERDIR}/bbappends/meta-clang/*/*/*.bbappend \
    flatpak:${LAYERDIR}/bbappends/meta-flatpak/*/*/*.bbappend \
    intel:${LAYERDIR}/bbappends/meta-intel/*/*/*.bbappend \
    tlk:${LAYERDIR}/bbappends/meta-intel/meta-tlk/*/*/*.bbappend \
    librealsense:${LAYERDIR}/bbappends/meta-intel-realsense/*/*/*.bbappend \
    iotqa:${LAYERDIR}/bbappends/meta-iotqa/*/*/*.bbappend \
    iotweb:${LAYERDIR}/bbappends/iot-web-layers/meta-iot-web/*/*/*.bbappend \
    oic:${LAYERDIR}/bbappends/meta-oic/*/*/*.bbappend \
    efl-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-efl/*/*/*.bbappend \
    filesystems-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-filesystems/*/*/*.bbappend \
    gnome-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-gnome/*/*/*.bbappend \
    gpe-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-gpe/*/*/*.bbappend \
    meta-initramfs:${LAYERDIR}/bbappends/meta-openembedded/meta-initramfs/*/*/*.bbappend \
    multimedia-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-multimedia/*/*/*.bbappend \
    networking-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-networking/*/*/*.bbappend \
    openembedded-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-oe/*/*/*.bbappend \
    perl-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-perl/*/*/*.bbappend \
    meta-python:${LAYERDIR}/bbappends/meta-openembedded/meta-python/*/*/*.bbappend \
    ruby-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-ruby/*/*/*.bbappend \
    systemd-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-systemd/*/*/*.bbappend \
    webserver:${LAYERDIR}/bbappends/meta-openembedded/meta-webserver/*/*/*.bbappend \
    xfce-layer:${LAYERDIR}/bbappends/meta-openembedded/meta-xfce/*/*/*.bbappend \
    security:${LAYERDIR}/bbappends/meta-security/*/*/*.bbappend \
    tpm-layer:${LAYERDIR}/bbappends/meta-security/meta-tpm/*/*/*.bbappend \
    security-isafw:${LAYERDIR}/bbappends/meta-security-isafw/*/*/*.bbappend \
    core:${LAYERDIR}/bbappends/openembedded-core/meta/*/*/*.bbappend \
"

# Set a variable to get to the top of the IoT Reference OS Kit metadata location.
META_REFKIT_CORE_BASE := '${LAYERDIR}'

BBFILE_COLLECTIONS += "refkit-core"
BBFILE_PATTERN_refkit-core = "^${LAYERDIR}/"
BBFILE_PRIORITY_refkit-core = "6"

LAYERDEPENDS_refkit-core = "core"

# There are multiple different ways for providing some of the
# dependencies. Here we assume that the dependencies are available if
# the layers that the refkit distro takes them from are present.
HAVE_META_OE = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'openembedded-layer', 'True', 'False', d) }"
HAVE_ATOP ??= "${HAVE_META_OE}"
HAVE_CRYPTSETUP ??= "${HAVE_META_OE}"
HAVE_CRYPTSETUP ??= "${HAVE_META_OE}"
HAVE_CAN_UTILS ??= "${HAVE_META_OE}"
HAVE_VIM ??= "${HAVE_META_OE}"
HAVE_HTOP ??= "${HAVE_META_OE}"
HAVE_META_SECURITY = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'security', 'True', 'False', d) }"
HAVE_KEYUTILS ??= "${HAVE_META_SECURITY}"
HAVE_META_NETWORKING = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'networking-layer', 'True', 'False', d) }"
HAVE_LOWPAN_TOOLS ??= "${HAVE_META_NETWORKING}"
HAVE_IFTOP ??= "${HAVE_META_NETWORKING}"
HAVE_META_IOT_WEB = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'iotweb', 'True', 'False', d) }"
HAVE_NODEJS ??= "${HAVE_META_IOT_WEB}"

HAVE_META_FLATPAK = "${@ bb.utils.contains('BBFILE_COLLECTIONS', 'flatpak-layer', 'True', 'False', d) }"
HAVE_FLATPAK ??= "${HAVE_META_FLATPAK}"
HAVE_OSTREE ??= "${HAVE_META_FLATPAK}"
